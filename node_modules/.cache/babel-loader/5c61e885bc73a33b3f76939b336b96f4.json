{"ast":null,"code":"var _jsxFileName = \"/Applications/Project/practice-react-query/src/components/DynamicParallelQueriesPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useQueries } from \"react-query\";\nimport { toast } from \"react-toastify\";\nimport { useStudentsData } from \"./../hooks/useStudentsData\";\nimport { fetchStudent } from \"./../api/studentAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DynamicParallelQueriesPage() {\n  _s();\n\n  const [studentIds, setStudentIds] = useState([]);\n\n  const onSuccess = data => {\n    toast.success(\"called data students success\", {\n      autoClose: 1000\n    });\n  };\n\n  const onError = error => {\n    toast.error(error.message, {\n      autoClose: 2000\n    });\n  };\n\n  const {\n    data: students\n  } = useStudentsData(onSuccess, onError);\n  useQueries();\n  useEffect(() => {\n    if (students) {\n      const studentIDs = students.data.map(student => student.id);\n      setStudentIds(studentIDs);\n    }\n  }, [students]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Dynamic Parallel Queries Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DynamicParallelQueriesPage, \"AyCvRGlXH/ywNUlFganyjtzrlQU=\", false, function () {\n  return [useStudentsData, useQueries];\n});\n\n_c = DynamicParallelQueriesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicParallelQueriesPage\");","map":{"version":3,"names":["useEffect","useState","useQueries","toast","useStudentsData","fetchStudent","DynamicParallelQueriesPage","studentIds","setStudentIds","onSuccess","data","success","autoClose","onError","error","message","students","studentIDs","map","student","id"],"sources":["/Applications/Project/practice-react-query/src/components/DynamicParallelQueriesPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {useQueries} from \"react-query\"\nimport { toast } from \"react-toastify\";\nimport { useStudentsData } from \"./../hooks/useStudentsData\";\nimport {fetchStudent} from \"./../api/studentAPI\"\n\nexport default function DynamicParallelQueriesPage() {\n  const [studentIds, setStudentIds] = useState([]);\n\n  const onSuccess = (data) => {\n    toast.success(\"called data students success\", { autoClose: 1000 });\n  };\n\n  const onError = (error) => {\n    toast.error(error.message, { autoClose: 2000 });\n  };\n\n  const { data: students } = useStudentsData(onSuccess, onError);\n  useQueries()\n\n  useEffect(() => {\n    if (students) {\n      const studentIDs = students.data.map((student) => student.id);\n      setStudentIds(studentIDs)\n    }\n  }, [students]);\n\n  return (\n    <div>\n      <h4>Dynamic Parallel Queries Page</h4>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAAQC,YAAR,QAA2B,qBAA3B;;AAEA,eAAe,SAASC,0BAAT,GAAsC;EAAA;;EACnD,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;;EAEA,MAAMQ,SAAS,GAAIC,IAAD,IAAU;IAC1BP,KAAK,CAACQ,OAAN,CAAc,8BAAd,EAA8C;MAAEC,SAAS,EAAE;IAAb,CAA9C;EACD,CAFD;;EAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;IACzBX,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACC,OAAlB,EAA2B;MAAEH,SAAS,EAAE;IAAb,CAA3B;EACD,CAFD;;EAIA,MAAM;IAAEF,IAAI,EAAEM;EAAR,IAAqBZ,eAAe,CAACK,SAAD,EAAYI,OAAZ,CAA1C;EACAX,UAAU;EAEVF,SAAS,CAAC,MAAM;IACd,IAAIgB,QAAJ,EAAc;MACZ,MAAMC,UAAU,GAAGD,QAAQ,CAACN,IAAT,CAAcQ,GAAd,CAAmBC,OAAD,IAAaA,OAAO,CAACC,EAAvC,CAAnB;MACAZ,aAAa,CAACS,UAAD,CAAb;IACD;EACF,CALQ,EAKN,CAACD,QAAD,CALM,CAAT;EAOA,oBACE;IAAA,uBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GA1BuBV,0B;UAWKF,e,EAC3BF,U;;;KAZsBI,0B"},"metadata":{},"sourceType":"module"}